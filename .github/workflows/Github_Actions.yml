name: R-CMD-check
 
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
 
jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@master

      - name: Cache openssl
        uses: actions/cache@v1
        id: cache-openssl
        with:
          path: "~/openssl"
          key: "openssl"
          
      - name: Install openssl
        env:
          CACHE_HIT: ${{steps.cache-openssl.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/openssl/* /
          else
            sudo apt-get install libcurl4-openssl-dev libxml2-dev
          fi

      - name: Cache proto
        uses: actions/cache@v1
        id: cache-proto
        with:
          path: "~/proto"
          key: "proto"
          
      - name: Install proto
        env:
          CACHE_HIT: ${{steps.cache-proto.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/proto/* /
          else
            R -e 'install.packages("remotes")'
          fi

      - name: Cache grpcbase
        uses: actions/cache@v1
        id: cache-grpcbase
        with:
          path: "~/grpcbase"
          key: "grpcbase"
          
      - name: Install grpcbase
        env:
          CACHE_HIT: ${{steps.cache-grpcbase.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/grpcbase/* /
          else
            R -e 'remotes::install_deps(dependencies = TRUE)'
          fi

      - name: Cache submodule
        uses: actions/cache@v1
        id: cache-submodule
        with:
          path: "~/submodule"
          key: "submodule"
          
      - name: Install submodule
        env:
          CACHE_HIT: ${{steps.cache-submodule.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --verbose --force --recursive ~/submodule/* /
          else
            R -e 'remotes::install_cran("covr")'
          fi

      - name: Test Package
        run: R -e 'covr::codecov()'
